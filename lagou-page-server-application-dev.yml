server:
  port: 9100

spring:
  application:
    name: lagou-service-page # 定义一个名称
  datasource:
    driver-class-name: com.mysql.jdbc.Driver
    url: jdbc:mysql://localhost:3306/springclouddata?useUnicode=true&characterEncoding=utf8&serverTimezone=UTC
    username: root
    password: 123456

eureka:
  client: # Eureka server本身也是Eureka的一个客户端，因为在集群下需要与其他Eureka Server 进行数据同步
    service-url: # 定义eureka server url
      # 客户端可以配置多个也可以配置一个，因为EurekaServer都是同步注册的
      defaultZone: http://LagouCloudEurekaServerA:9200/eureka,http://LagouCloudEurekaServerB:9201/eureka
  instance:
    #    hostname: localhost # 当前Eureka实例的主机名
    # 使用IP注册，否则会使用主机名进行注册（此处考虑到对老版本的兼容，新版本经过试验都是IP）
    prefer-ip-address: true
    # 自定义实例显示格式，如加上版本号，便于多版本管理，注意是ip-address z=早期版本是ipAddress
    instance-id: ${spring.cloud.client.ip-address}:${spring.application.name}:${server.port}:@project.version@

# 针对的被调用方微服务名称，不加就是全局生效
lagou-service-product:
  ribbon:
    # 请求连接超时时间
    ConnectTimeout: 2000
    # 请求处理超时时间
    ReadTimeout: 15000
    # 对所有操作都进行重试
    OkToRetryOnAllOperations: true
    # 根据如上配置，当访问到故障请求的时候，它会再尝试访问一次当前实例
    MaxAutoRetries: 0 # 对当前选中实例重试次数，不包括第一次调用
    MaxAutoRetriesNextServer: 0 # 切换实例的重试次数
    NFLoadBalancerRuleClassName: com.netflix.loadbalancer.RandomRule # 采用随机策略

# hystrix 熔断策略配置
hystrix:
  threadpool:
    default:
      coreSize: 10 # 并发执行的最大线程数，默认是10
      maxQueueSize: 1500 # BlockingQueue的最大队列数，默认值 -1
      queueSizeRejectionThreshold: 800 # 即使maxQueueSize没有达到，到达了queueSizeRejectionThreshold的值后，请求也会被拒绝，默认值5
  command:
    default:
      circuitBreaker:
        # 强制打开熔断器，如果该属性设置为true，强制断路器进入打开状态，将会拒绝所有的请求。
        # 默认false关闭的
        forceOpen: false
        # 触发熔断错误比例阈值，默认值50%
        errorThresholdPercentage: 50
        # 熔断后休眠时长，默认值5秒
        sleepWindowInMilliseconds: 3000
        # 熔断触发最小请求次数，默认值是20
        requestVolumeThreshold: 2
      execution:
        isolation:
          thread:
            # 熔断超时设置，默认为1秒
            timeoutInMilliseconds: 2000


# springboot 中暴露健康检查等断点接口  /actuator/health
management:
  endpoints:
    web:
      exposure:
        include: "*"
  # 暴露的细节
  endpoint:
    health:
      show-details: always

# 开启feign熔断功能
feign:
  hystrix:
    enabled: true
  # 开启请求和响应的压缩 默认是不开启的需要手动开启
  compression:
    response:
      enabled: true
    request:
      enabled: true
      # 最小的压缩的下限
#      min-request-size: 2048 # 默认值 不需要动
#      mime-types: 默认值 不需要动